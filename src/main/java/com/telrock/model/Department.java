/*
 * Copyright Telrock Communications Limited 2008 * 
 *
 * $Header:  $
 * $Revision:  $
 * $Date:  $ 
 * 
 */
package com.telrock.model;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.OneToMany;

@Entity
public class Department implements Comparable<Department>
{
	//@formatter:off
	/*
	 * long id     - primary key, autogenerated
	 * String name - department's name
	 * String area - what is the department's area. Some departments may be in the same area.
	 */
	//@formatter:on
	
	@Id
	@GeneratedValue
	private Long id;
	
	@Column
	private String name;
	
	@Column
	private String area;

	 @OneToMany(mappedBy="department",cascade=CascadeType.PERSIST)
	    private List<Person> employees = new ArrayList<Person>();
	
	public Department() {
		
	}

	public List<Person> getEmployees() {
		return employees;
	}

	public void setEmployees(List<Person> employees) {
		this.employees = employees;
	}

	public Department(String name, String area) {
		this.name = name;
		this.area = area;
	}

	public Long getId() {
		return id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	public String getName() {
		return name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((area == null) ? 0 : area.hashCode());
		
		result = prime * result + ((name == null) ? 0 : name.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Department other = (Department) obj;
		if (area == null) {
			if (other.area != null)
				return false;
		} else if (!area.equals(other.area))
			return false;
		if (name == null) {
			if (other.name != null)
				return false;
		} else if (!name.equals(other.name))
			return false;
		return true;
	}

	public String getArea() {
		return area;
	}

	public void setArea(String area) {
		this.area = area;
	}

	@Override
	public int compareTo(Department obj) {
		Department other = (Department)obj;
		int nameDiff = name.compareTo(obj.name);
		if(nameDiff==0)
		{
			int areaDiff = area.compareTo(obj.area);
			if(areaDiff==0)
			{
				return 0;
			}
			else
				return areaDiff;
		}
		else
			return nameDiff;
	}
	
	
	
}
